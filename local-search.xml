<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>hello11</title>
    <link href="/2023/03/08/hello11/"/>
    <url>/2023/03/08/hello11/</url>
    
    <content type="html"><![CDATA[]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>hello</title>
    <link href="/2023/03/08/hello/"/>
    <url>/2023/03/08/hello/</url>
    
    <content type="html"><![CDATA[]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>Hello World</title>
    <link href="/2023/03/08/hello-world/"/>
    <url>/2023/03/08/hello-world/</url>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo new <span class="hljs-string">&quot;My New Post&quot;</span><br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo server<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo generate<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo deploy<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title> Hexo博客的搭建与推送</title>
    <link href="/2015/07/09/Hexo%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA%E6%B5%81%E7%A8%8B/"/>
    <url>/2015/07/09/Hexo%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA%E6%B5%81%E7%A8%8B/</url>
    
    <content type="html"><![CDATA[<h1 id="Hexo博客的搭建与推送"><a href="#Hexo博客的搭建与推送" class="headerlink" title="Hexo博客的搭建与推送"></a>Hexo博客的搭建与推送</h1><h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>首先，需要阅读这篇文章：<a href="https://www.itbob.cn/article/002/">使用 Github Pages 和 Hexo 搭建自己的独立博客 - BOB’S BLOG (itbob.cn)</a>使用 Github Pages 和 Hexo 搭建自己的独立博客 - BOB’S BLOG (itbob.cn)”)，简单易懂，十分详细。本文也是对这篇文章的补充与部分更改，因这篇文章的创作时间为2018年，距今已过太久，难免会有些东西在其中过时。于是便有了这篇博客，需要注意的是，这篇博客并不是**<code>完全从零开始的新手教学</code><strong>，而是对<a href="https://www.itbob.cn/article/002/">使用 Github Pages 和 Hexo 搭建自己的独立博客 - BOB’S BLOG (itbob.cn)</a>的&#x3D;&#x3D;补充与更改</strong>，所以请务必先阅读<a href="https://www.itbob.cn/article/002/">使用 Github Pages 和 Hexo 搭建自己的独立博客 - BOB’S BLOG (itbob.cn)</a>。</p><p>另外，下文中所有的操作均在win10系统下操作，不涉及到其他系统的教学。</p><p>方便起见，这篇文章：<a href="https://www.itbob.cn/article/002/">使用 Github Pages 和 Hexo 搭建自己的独立博客 - BOB’S BLOG (itbob.cn)</a>在下文中统称原文。</p><h2 id="入门部分"><a href="#入门部分" class="headerlink" title="入门部分"></a>入门部分</h2><h3 id="安装git"><a href="#安装git" class="headerlink" title="安装git"></a>安装git</h3><p>随着时间变化，原文的git安装部分可以说是完全变了个样，下面是具体的变化和补充。</p><ul><li><h4 id="选择版本和安装"><a href="#选择版本和安装" class="headerlink" title="选择版本和安装"></a>选择版本和安装</h4><p>点开原文中的Git 官网下载地址，可以看到以下界面：</p><p><img src="/image-20230304205306768.png" alt="image-20230304205306768"></p><p>选择对应的操作系统后能看到以下界面：</p><p><img src="/image-20230304205600730.png" alt="image-20230304205600730"></p><p>在其中，“click here to download”是下载最新版本的独立安装程序；“Standalone Installer”是独立安装程序；“Portable (“thumbdrive edition”)”是免安装绿色版本。选择自己中意的安装就好。这几种模式均具有我们搭建博客需要的所有功能，唯一的区别是独立安装版在安装后会在鼠标右键添加 Git GUI Here 和 Git Bash Here 两个选项，而免安装版则没有。只能通过解压后的git-bash.exe或git-cmd.exe运行。</p><p>具体原因未知，我在安装独立安装版本时，电脑发生了蓝屏的情况，万幸的是电脑没有丢失任何数据，这一点需要注意。</p><blockquote><p>对于独立安装包可以参考这个教程，[超详细 Git 安装教程]([超详细Git 安装教程(Windows)<a href="https://cloud.tencent.com/developer/article/2099150">通俗易懂] - 腾讯云开发者社区-腾讯云 (tencent.com)</a>)</p></blockquote><blockquote><p>免安装版实际上是一个压缩文件，按照提示解压即可。</p></blockquote><h2 id="部署至Github-Pages"><a href="#部署至Github-Pages" class="headerlink" title="部署至Github Pages"></a>部署至Github Pages</h2><ul><li><h4 id="创建库"><a href="#创建库" class="headerlink" title="创建库"></a>创建库</h4></li></ul><p>Github的界面与几年前有了些改动，对于我这种第一次创建库的人来说，这一点小小的改动简直要了我的命。创建代码库的位置在主页的这里：</p><p><img src="/image-20230304211247921.png" alt="image-20230304211247921"></p></li></ul><p>同时，在创建代码库时，界面也稍有改动，只是原文中需要打勾的地方没了而已。</p><ul><li><h4 id="修改-config-yml文件"><a href="#修改-config-yml文件" class="headerlink" title="修改 _config.yml文件"></a>修改 _config.yml文件</h4><p>如图。</p><p> <img src="/image-20230304211917796.png" alt="image-20230304211917796"></p><ul><li><h4 id="推送至Github-Pages"><a href="#推送至Github-Pages" class="headerlink" title="推送至Github Pages"></a>推送至Github Pages</h4>不知道是不是因为软件更迭的原因，我在推送至Github Pages时没有遇到需要输入账号密码的步骤，但页面也仍然上传了。</li></ul></li></ul><h2 id="更换主题"><a href="#更换主题" class="headerlink" title="更换主题"></a>更换主题</h2><ul><li><h4 id="更新后推送至Github-Pages"><a href="#更新后推送至Github-Pages" class="headerlink" title="更新后推送至Github Pages"></a>更新后推送至Github Pages</h4><p>这一步是我耗时最长的一步，主要原因是我的配置文件设置( _config.yml)错误。</p><p>在我推送网页至Github Pages后打开发现页面可以打开，但图片和css样式却全部消失。搜索后发现可能的原因有</p><ol><li><p>js错误</p></li><li><p>图片和css文件位置错误</p></li><li><p>相对路径写成了绝对路径</p><p>但我却发现上面三条的配置都没有问题，在纠结了好一阵后还是靠着cahtgpt才明白了来龙去脉。原因是配置文件中的这里写错了：</p><p><img src="/image-20230304214149174.png" alt="image-20230304214149174"></p><p>对于这里，有几个个十分重要的点：</p></li></ol></li><li><p>对于url，最后的斜杠后要接上的是你的项目的名称，前面的只要能正常显示就不用管。</p></li><li><p>对于root，它代表的根目录，在更改之前，我的root为“\ZOUYIQAQ.github.io\”，而这显然是错误的，在我的文件中，文件定位从根目录开始，而不是“ZOUYIQAQ.github.io\”。</p><p>所以对于在本地显示正常，但在线上就出现问题的情况就可以考虑这样做：</p><blockquote><ul><li>首先，确定自己的文件使用的是相对路径还是绝对路径</li><li>然后，检查文件是否在路径应有的位置。</li><li>最后，更改文件或配置文件。</li></ul></blockquote><h2 id="配置个性域名"><a href="#配置个性域名" class="headerlink" title="配置个性域名"></a>配置个性域名</h2><p>这里没什么问题，只要按着原文来做就好。只是有一点需要注意，在配置完域名解析后，需要十几二十分钟的时间来生效，如果没反应的话可以等等看。</p><h2 id="网站加速和安全性"><a href="#网站加速和安全性" class="headerlink" title="网站加速和安全性"></a>网站加速和安全性</h2><p>好了现在网站是配置完了，其他人也能看到了，但是如果现在打开网站看看，就会发现两问题。</p><ol><li><p>网站显示不安全，因为使用的协议为http协议，而非https协议。</p></li><li><p>网站加载过慢，随便一张图片就需要好久才能加载出来。</p></li></ol><p>为了解决这两问题，我们需要修改默认的DNS服务器。这里有腾讯和cloudflare两家。推荐使用cloudflare的域名解析服务。在速度上和腾讯相差不大，更重要的是，它提供免费的服务，能将http转为https。这样一来，浏览器就不会再显示“不安全”的警告了。</p><p>关于教程，推荐这一篇。</p><p><a href="https://zhuanlan.zhihu.com/p/369907876">独立站速度优化之Cloudflare CDN - 知乎 (zhihu.com)</a></p><p>值得一提的是，这并不是立即生效的，需要一定的时间。即便在cloudflare上显示已经生效也是如此。</p></li></ul>]]></content>
    
    
    
    <tags>
      
      <tag>git</tag>
      
      <tag>github</tag>
      
    </tags>
    
  </entry>
  
  
  
  
</search>
